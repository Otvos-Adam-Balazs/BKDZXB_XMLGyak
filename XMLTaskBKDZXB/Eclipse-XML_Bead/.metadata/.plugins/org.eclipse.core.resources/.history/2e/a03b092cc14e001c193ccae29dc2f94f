package hu.domparse.bkdzxb;

import java.io.File;
import java.io.IOException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.w3c.dom.CDATASection;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

public class Dom2 {

	public static void main(String[] args) throws ParserConfigurationException, SAXException, IOException, TransformerException {
		// TODO Auto-generated method stub
		File xmlFile = new File("XMLBKDZXB.xml");
		
		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
		DocumentBuilder dBuilder = factory.newDocumentBuilder();
		
		// Fájl betöltése a Documentbuldierbe
		Document doc = dBuilder.parse(xmlFile);
		doc.getDocumentElement().normalize(); 
		
		NodeList listOfCselerhetoseg = doc.getElementsByTagName("Cselerhetoseg");
		
		Element Cselerhetoseg = doc.createElement("Cselerhetoseg");
        // add a new xml CDATA
        CDATASection cdataSection =
                doc.createCDATASection("Email:szikla@gmai.com");

        Cselerhetoseg.appendChild(cdataSection);

        Cselerhetoseg.appendChild(Cselerhetoseg);
        
        SaveAsDoc(doc, "teszt.xml");
	}
	public static void SaveAsDoc(Document doc, String filename) throws TransformerException {
		TransformerFactory transformerFactory = TransformerFactory.newInstance();
		Transformer transf = transformerFactory.newTransformer();
		
		transf.setOutputProperty(OutputKeys.ENCODING, "UTF-8");
		transf.setOutputProperty(OutputKeys.INDENT, "yes");
		transf.setOutputProperty("{https://xml.apache.org/.xslt}indent-amount", "2");
		
		DOMSource source = new DOMSource(doc);
		
		File myFile = new File(filename);
		
		StreamResult console = new StreamResult(System.out);
		StreamResult file = new StreamResult(myFile);
		
		transf.transform(source, console);
		transf.transform(source, file);
	}
}
